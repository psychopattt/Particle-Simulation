// Generated code

#if !DEBUG
#include "Shaders/ShaderProvider/ShaderProvider.h"
const string ShaderProvider::UnpackCode(const uint32_t& h) {
switch (h) {
case 1939412094: return "#version 460 core\nin vec2 fragmentTextureCoords;uniform sampler2D dataTexture;out vec4 color;void main(){color=texture(dataTexture,fragmentTextureCoords);}";
case 776390504: return "#version 460 core\nin vec4 position;in vec2 vertexTextureCoords;out vec2 fragmentTextureCoords;void main(){gl_Position=position;fragmentTextureCoords=vertexTextureCoords;}";
case 3759396228: return "#version 460 core\nlayout(local_size_x=8,local_size_y=8,local_size_z=1)in;\n#define b 0\n#define c 1\n#define d 2\nstruct a{int type;float shade;};uniform ivec2 size;uniform vec3 voidColor;layout(rgba32f)restrict writeonly uniform image2D texture;layout(std430)restrict readonly buffer particlesBuffer{a Particles[];};vec3 e(a f){switch(f.type){case b:return voidColor;case c:return vec3(.82,.82,0)+(f.shade/8);case d:return vec3(.293)+(f.shade/100);default:return vec3(1,0,1);}}void main(){ivec2 g=ivec2(gl_GlobalInvocationID.xy);if(g.x>=size.x||g.y>=size.y)return;uint h=g.y*size.x+g.x;vec3 i=e(Particles[h]);imageStore(texture,g,vec4(i,1));}";
case 1549598707: return "#version 460 core\nlayout(local_size_x=8,local_size_y=8,local_size_z=1)in;\n#define b 0\n#define c 1\n#define d 2\nstruct a{int type;float shade;};uniform ivec2 size;uniform uint frame;uniform uint globalSeed;uniform bool overwrite;uniform ivec2 lastPosition;uniform ivec2 currentPosition;uniform float drawRadius;uniform int drawType;layout(std430)restrict buffer particlesBuffer{a Particles[];};float e(vec3 h){h=fract(h*.1031);h+=dot(h,h.zyx+31.32);return fract((h.x+h.y)*h.z);}float f(vec2 i){return e(vec3(globalSeed+frame,i));}float g(vec2 j,vec2 k,vec2 l){vec2 m=l-j;vec2 n=k-j;float o=clamp(dot(m,n)/dot(n,n),0,1);return length(m-n*o);}void main(){ivec2 p=ivec2(gl_GlobalInvocationID.xy);if(p.x>=size.x||p.y>=size.y)return;uint q=p.y*size.x+p.x;float r=g(lastPosition,currentPosition,p);bool s=overwrite||drawType==b||Particles[q].type==b;if(r<drawRadius&&s){vec2 t=r*1.1031+p;Particles[q]=a(drawType,f(t)-.5);}}";
case 1060733367: return "#version 460 core\nlayout(local_size_x=8,local_size_y=8,local_size_z=1)in;\n#define b 0\n#define c 1\n#define d 2\nstruct a{int type;float shade;};uniform ivec2 size;layout(std430)restrict writeonly buffer particlesBuffer{a Particles[];};void main(){ivec2 e=ivec2(gl_GlobalInvocationID.xy);if(e.x>=size.x||e.y>=size.y)return;uint f=e.y*size.x+e.x;Particles[f]=a(b,0);}";
case 3453390440: return "#version 460 core\nlayout(local_size_x=8,local_size_y=8,local_size_z=1)in;\n#define b 0\n#define c 1\n#define d 2\nstruct a{int type;float shade;};uniform ivec2 size;uniform uint frame;uniform uint globalSeed;layout(std430)restrict readonly buffer inputParticles{a InputParticles[];};layout(std430)restrict writeonly buffer outputParticles{a OutputParticles[];};float e(vec3 n){n=fract(n*.1031);n+=dot(n,n.zyx+31.32);return fract((n.x+n.y)*n.z);}float f(vec2 o){return e(vec3(globalSeed+frame,o));}ivec2 g(){switch(frame%4){case 0:return ivec2(0,0);case 1:return ivec2(1,1);case 2:return ivec2(0,1);case 3:return ivec2(1,0);}}uint h(ivec2 p){return p.y*size.x+p.x;}a i(ivec2 q){return(q.x<0||q.x>=size.x||q.y<0||q.y>=size.y)?a(d,0):InputParticles[h(q)];}void j(inout a r,inout a s){a t=r;r=s;s=t;}void k(inout a u,inout a v,inout a w,inout a A,float B){if(u.type==c){if(A.type==b){if(B<.9)j(u,A);}else if(v.type==b&&w.type==b){j(u,w);}}if(v.type==c){if(w.type==b){if(B<.9)j(v,w);}else if(u.type==b&&A.type==b){j(v,A);}}}void l(inout a C,inout a D,inout a E,inout a F,float G,float H,float I){k(C,D,E,F,G);}void m(ivec2 J,ivec2 K,a L,a M,a N,a O){uint P=h(J);ivec2 Q=(J+K)&1;uint R=Q.y*2+Q.x;switch(R){case 0:OutputParticles[P]=O;break;case 1:OutputParticles[P]=N;break;case 2:OutputParticles[P]=L;break;case 3:OutputParticles[P]=M;break;}}void main(){ivec2 S=ivec2(gl_GlobalInvocationID.xy);if(S.x>=size.x||S.y>=size.y)return;ivec2 T=g();ivec2 U=((S+T)/2)*2-T;a V=i(U+ivec2(0,1));a W=i(U+ivec2(1,1));a X=i(U+ivec2(1,0));a Y=i(U);float Z=f(U);float aa=f(U+Z);float ab=f(U+aa);l(V,W,X,Y,Z,aa,ab);m(S,T,V,W,X,Y);}";
default: return ""; }}
#endif
